@page
@model SparkAuto.Pages.Services.CreateModel
@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


<div class="container pt-4 pb-2 row">

    <div class="col-6">
        <h2 class="text-info py-2">Create New Service</h2>
    </div>
    <div class="col-3 offset-3 text-right py-2">
        <a asp-page="../Cars/Index" asp-route-userId="@Model.CarServiceVM.Car.UserId" class="btn btn-outline-success form-control">Back to List</a>
    </div>
</div>

<div class="container background-white">
    <div class="card">

        <div class="card-header bg-dark text-light ml-0 row container">
            <div class="col-1 text-center pt-3 text-white-50">
                <i class="far fa-user fa-2x"></i>
            </div>

            <div class="col-5">
                <label class="text-info">@Model.CarServiceVM.Car.ApplicationUser.Name</label><br />
                <label class="text-info">
                    @Model.CarServiceVM.Car.ApplicationUser.Email /
                    @Model.CarServiceVM.Car.ApplicationUser.PhoneNumber
                </label><br />
            </div>

            <div class="col-5 text-right">
                <label class="text-info">@Model.CarServiceVM.Car.Make @Model.CarServiceVM.Car.Model @Model.CarServiceVM.Car.Style</label><br />
                <label class="text-info">@Model.CarServiceVM.Car.Year</label>
            </div>

            <div class="col-1 text-center pt-3 text-white-50">
                <i class="fas fa-car fa-2x"></i>
            </div>
        </div>

        @* When using label above we need the @Model but when using asp-for it assumes the @Model *@
        <div class="card-body">
            <form method="post" style="width:100%">
                <div class="container">
                    <input type="hidden" asp-for="CarServiceVM.Car.Id" />
                    <input type="hidden" asp-for="CarServiceVM.Car.Make" />
                    <input type="hidden" asp-for="CarServiceVM.Car.Model" />
                    <input type="hidden" asp-for="CarServiceVM.Car.VIN" />
                    <input type="hidden" asp-for="CarServiceVM.Car.UserId" />

                    <div class="border rounded p-2">
                        <div class="row">
                            <div class="col-3">
                                <h4 class="text-info pl-3 pt-2 pb-1">Add Service</h4>
                            </div>
                            <div class="col-9 pb-1 pt-2">
                                <div class="row">
                                    <div class="col-8">
                                        @* The asp-for assigns to the bound model so the backend can use it
                                            The asp-items is what shows in the drop down list
                                            The list is from the ServieType List passed in in the model.
                                            Not sure what the Id and Name do?*@
                                        <select asp-for="CarServiceVM.ServiceDetails.ServiceTypeId"
                                                asp-items="@(new SelectList(Model.CarServiceVM.ServiceTypeList, "Id", "Name"))"
                                                class="form-control">
                                        </select>
                                    </div>
                                    <div class="col-4">
                                        <button type="submit" asp-page-handler="AddToCart" class="form-control btn btn-primary">
                                            Add
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />

                    <div class="border container rounded p-2">
                        <h3 class="text-info pb-2">Service Summary</h3>
                        @* Check if the shopping cart is empty *@
                        @if (Model.CarServiceVM.ServiceShoppingCart.Count == 0)
                        {
                            <p>
                                No service has been added yet.  Please add a servie to be performed.
                            </p>
                        }
                        else
                        {
                            <div class="row mt-3">
                                <div class="col-7">
                                    <table class="table table-striped border">

                                        @* Header text *@
                                        <tr class="table-secondary">
                                            <th>
                                                @Html.DisplayNameFor(m => Model.CarServiceVM.ServiceTypeList.FirstOrDefault().Name)
                                            </th>
                                            <th>
                                                Price
                                                @*@Html.DisplayNameFor(m => Model.CarServiceVM.ServiceTypeList.FirstOrDefault().Price)*@
                                            </th>
                                            <th>

                                            </th>
                                        </tr>

                                        @* Fill in the data*@
                                        @foreach (var item in Model.CarServiceVM.ServiceShoppingCart)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(m => item.ServiceType.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(m => item.ServiceType.Price)
                                                </td>
                                                <td>
                                                    <button type="submit" class="btn btn-danger form-control"
                                                            asp-page-handler="RemoveFromCart" asp-route-serviceTypeId="@item.ServiceTypeId">
                                                        <i class="far fa-trash-alt"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }

                                        @* Total price found at the bottom of the service list *@
                                        <tr style="background-color:#e2fee2">
                                            <td colspan="1">
                                                <h6 class="text-success">Total Price :</h6>
                                            </td>
                                            @* Total price stored in the service header *@
                                            <td colspan="2">
                                                <h6 class="text-success">$@Model.CarServiceVM.ServiceHeader.TotalPrice</h6>
                                            </td>
                                        </tr>

                                    </table>
                                </div>

                                @* This is where the miles for the service are entered and details are inputed *@
                                <div class="col-5 px-4 pb-2">

                                    @* Put miles input in one row and details in another row and button in third row *@
                                    <div class="row">
                                        <div class="col-3">
                                            <label asp-for="CarServiceVM.ServiceHeader.Miles" class="form-control" style="border:none;"></label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="CarServiceVM.ServiceHeader.Miles" id="txtMiles" class="form-control" />
                                        </div>
                                    </div>

                                    <div class="row py-2">
                                        <div class="col-12">
                                            <textarea placeholder="Comments..." asp-for="CarServiceVM.ServiceHeader.Details"
                                                      class="form-control" style="height:100px">
                                        </textarea>
                                        </div>
                                    </div>

                                    @* **** Calls JS script validateInput()*** *@
                                    <div class="row p-0">
                                        <div class="col-12">
                                            <button class="btn btn-success form-control"
                                                    onclick="return validateInput()">
                                                Service Completed
                                            </button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                    </div>

                </div>
            </form>
        </div>

    </div>  @* Card *@
</div>  @* Container *@


@* How to add the CDN to a core 3 fron end web page / view
    Create a section for scripts and pull in validation scripts *@
@section Scripts {

    <partial name="_ValidationScriptsPartial" />

    @* Add in CDN for JS scripts here - this one is for sweet alerts *@
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    @* Creating custom JS code *@
    <script>
        function validateInput() {
            var miles = document.getElementById("txtMiles").value;

            if (miles < 1) {
                // alert("Miles must be greater then 0");
                swal("Error!", "Miles must be greater then 0", "error");
                return false;
            }

        }

    </script>
     

}
